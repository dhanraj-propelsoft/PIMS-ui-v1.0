/* For Input PlaceHolder */
input,select,textarea{
    border-radius: 5px !important;

  }
  select{
 
    padding:.42rem .75rem !important;
    
  }


  
  /* select option{
     padding: 10px !important;
  } */

input:read-only{
    background-color: var( --white-color-5) !important;
    cursor: not-allowed;
    border-radius: unset !important;
}
.AlterInput::placeholder {
    font-style: italic;
    font-family: monospace;
    color: transparent;
    /* font-size: ; */
}



.AlterInput:focus~.AlterInputLabel {
    color: var(--propel);
    top: -8px;
    left: 15px;
    opacity: 1;
    font-size: 80%;

}
.select2-search__field::placeholder{
  font-size: 80%;
}
select ~ .AlterInputLabel{
  display: none;
}
.select2-container--below:not(:has(.select2-selection__placeholder)) ~ .AlterInputLabel,
.select2-container--below:not(:has(.select2-selection__placeholder)) ~ .AlterInputLabel {
  display: unset;
}
.AlterInputLabel sup{
    color: var(--red-color);
    font-weight: 700;
}
.AlterInput:focus::placeholder {
    color:var( --gray-color-1);
}

.AlterInputLabel {
    position: absolute;
    cursor: text;
   
    opacity: 1;
    transition: 0.3s ease;
    z-index: 3;
    line-height: 1;
    background: var(--white-color);
    padding: 0 1px;
    color: var(--gray-color-5);
    top: 13px;
    left: 12px;
    padding: 2px 5px;
    white-space: nowrap;
    max-width: calc( 100% - 25px );
  font-size: 80%;
  overflow: hidden;
  font-weight: 600;
     text-overflow: ellipsis;
 white-space: nowrap;


}
@media only screen and (max-width: 360px) {
  .AlterInputLabel{
    font-size: 3vw;
  }
}
 

.InputLabel {
    position: relative;
}
.AlterInput:not(:placeholder-shown)~.AlterInputLabel {
    /* You need to add a placeholder to your fields. For example: <input "placeholder=" "/> */

    top: -8px;
    left: 15px;
    opacity: 1;
  }
 

  input[placeholder="Search..."] {
    /* border-radius: 5px !important; */
    width: 300px !important;
  }

  input[type="checkbox"], input[type="radio"]{
    cursor: pointer;
  }

 /* input[validate="success"]{
  border-color: rgb(70, 232, 70);
  background-color: rgb(217, 250, 217);
  
 } */
 /* .InputLabel:has(input[validate="success"]) .propel-input-error{
  display: none;
 } */

 input[validate="failure"]{

  border-color: var(--sandal-color-1);
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'><circle cx='6' cy='6' r='4.5'/><path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/><circle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/></svg>");
  background-repeat: no-repeat;
  background-position: calc(100% - 10px) center;

 }
 /* input[validate="success"]~.AlterInputLabel{
  background-image: linear-gradient(180deg,white,rgb(217, 250, 217));
  background-color:rgb(217, 250, 217); 
  border: 1px solid rgb(70, 232, 70);
  color: rgb(70, 232, 70);
 } */
  input[validate="failure"]~.AlterInputLabel{ 

   /* background-color:rgb(217, 250, 217); */
   /* border: 1px solid rgb(70, 232, 70);  */
 color: var(--red-color-2);
  } 
  .propel-input-error{
    color: var(--red-color);
    font-size: 10px;
    position: absolute;
    padding: 5px 2px;
    font-weight: 700;
    letter-spacing: 0.3px;
  }

.input-group .propel-input-error{
  bottom: -25px;
}
.input-group:has(.propel-input-error) input , .input-group:has(.propel-input-error) .input-group-addon{
  border-color: var(--red-color) !important;
  color: red;
}
  .toggleButton {
    cursor: pointer;
    display: block;
    transform-origin: 50% 50%;
    transform-style: preserve-3d;
    transition: transform 0.14s ease;
  }
  .toggleButton:active {
    transform: rotateX(30deg);
  }
  .toggleButton input {
    display: none;
  }
  .toggleButton input + div {
    border: 3px solid var(--green-color-4);
    border-radius: 50%;
    position: relative;
    width: 44px;
    height: 44px;
  }
  .toggleButton input + div svg {
    fill: none;
    stroke-width: 3.6;
    stroke:var(--green-color-5);
    stroke-linecap: round;
    stroke-linejoin: round;
    width: 44px;
    height: 44px;
    display: block;
    position: absolute;
    left: -3px;
    top: -3px;
    right: -3px;
    bottom: -3px;
    z-index: 1;
    stroke-dashoffset: 124.6;
    stroke-dasharray: 0 162.6 133 29.6;
    transition: all 0.4s ease 0s;
  }
  .toggleButton input[validate="failure"] + div svg{
    stroke:var(--red-color-1);
    fill: var(--sandal-color-2);
  }
  .toggleButton input[validate="success"] + div svg{
    stroke:var(--green-color-5);
    fill: none;
  }
 
  /* .toggleButton input + div:before, .toggleButton input + div:after {
    content: "";
    width: 3px;
    height: 16px;
    background: green;
    position: absolute;
    left: 50%;
    top: 50%;
    border-radius: 5px;
  }
  .toggleButton input + div:before {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
    -webkit-animation: bounceInBefore 0.3s linear forwards 0.3s;
            animation: bounceInBefore 0.3s linear forwards 0.3s;
  }
  .toggleButton input + div:after {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
    -webkit-animation: bounceInAfter 0.3s linear forwards 0.3s;
            animation: bounceInAfter 0.3s linear forwards 0.3s;
  } */
  .toggleButton input:checked + div svg {
    stroke-dashoffset: 162.6;
    stroke-dasharray: 0 162.6 28 134.6;
    transition: all 0.4s ease 0.2s;
  }
  .toggleButton input:checked + div:before {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
    -webkit-animation: bounceInBeforeDont 0.3s linear forwards 0s;
            animation: bounceInBeforeDont 0.3s linear forwards 0s;
  }
  .toggleButton input:checked + div:after {
    opacity: 0;
    transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
    -webkit-animation: bounceInAfterDont 0.3s linear forwards 0s;
            animation: bounceInAfterDont 0.3s linear forwards 0s;
  }
  
  @-webkit-keyframes bounceInBefore {
    0% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
    }
    50% {
      opacity: 0.9;
      transform: scale(1.1) translate(-50%, -50%) rotate(45deg);
    }
    80% {
      opacity: 1;
      transform: scale(0.89) translate(-50%, -50%) rotate(45deg);
    }
    100% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(45deg);
    }
  }
  
  @keyframes bounceInBefore {
    0% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
    }
    50% {
      opacity: 0.9;
      transform: scale(1.1) translate(-50%, -50%) rotate(45deg);
    }
    80% {
      opacity: 1;
      transform: scale(0.89) translate(-50%, -50%) rotate(45deg);
    }
    100% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(45deg);
    }
  }
  @-webkit-keyframes bounceInAfter {
    0% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
    }
    50% {
      opacity: 0.9;
      transform: scale(1.1) translate(-50%, -50%) rotate(-45deg);
    }
    80% {
      opacity: 1;
      transform: scale(0.89) translate(-50%, -50%) rotate(-45deg);
    }
    100% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(-45deg);
    }
  }
  @keyframes bounceInAfter {
    0% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
    }
    50% {
      opacity: 0.9;
      transform: scale(1.1) translate(-50%, -50%) rotate(-45deg);
    }
    80% {
      opacity: 1;
      transform: scale(0.89) translate(-50%, -50%) rotate(-45deg);
    }
    100% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(-45deg);
    }
  }
  @-webkit-keyframes bounceInBeforeDont {
    0% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(45deg);
    }
    100% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
    }
  }
  @keyframes bounceInBeforeDont {
    0% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(45deg);
    }
    100% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(45deg);
    }
  }
  @-webkit-keyframes bounceInAfterDont {
    0% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(-45deg);
    }
    100% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
    }
  }
  @keyframes bounceInAfterDont {
    0% {
      opacity: 1;
      transform: scale(1) translate(-50%, -50%) rotate(-45deg);
    }
    100% {
      opacity: 0;
      transform: scale(0.3) translate(-50%, -50%) rotate(-45deg);
    }
  }
.input-group .input-group-addon{
  
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid rgb(210, 210, 210);
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  width: 35px;
}
.input-group .AlterInput{
  border-right: none;
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
#passwordStrength{
width: 100%;
height: 100%;
/* background-color: #008000; */
}
.strength0 {
  background: none; /* too short */

}
.strength1 {
  background: none repeat scroll 0 0 #FF4545;/* weak */

}
.strength2 {
  background: none repeat scroll 0 0 #FFC824;/* good */

}
.strength3 {
      background: none repeat scroll 0 0 #6699CC;/* strong */

}

.strength4 {
      background: none repeat scroll 0 0 #008000;/* best */

}
.AlterInput:focus {
  /* border: none; */
  border-color: var(--propel) !important;
}
input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 30px var(--white-color) inset !important;
  -webkit-text-fill-color: inherit !important;
}
input:-moz-autofill {
  -moz-appearance: none !important;
  background-color: var(--white-color) !important;
  color: inherit !important;
}


.AlterInput:focus ~ .input-group-addon{
  color: var(--propel);
  border-color:var(--propel) !important;
 
}
/* .AlterInput:focus ~ .input-group-addon div{
  animation: pulse-inner 3s ease infinite;
} */
.otp{
  font-weight: 500;
  font-size: 12px;
  margin-left: 10px;
  color: #13b2ef;
  cursor: pointer;
}
